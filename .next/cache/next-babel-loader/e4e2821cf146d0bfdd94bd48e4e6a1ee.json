{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\react-tutorial\\\\next-page1\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/Layout\";\nimport axios from \"axios\";\nimport Link from 'next/link'; // import fetch from 'isomorphic-unfetch';\n\nvar PostLink = function PostLink(props) {\n  return __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/p/[id]/\",\n    as: \"/p/\".concat(props.id).concat(props.name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.id)));\n};\n\nvar Index = function Index(props) {\n  // const [news, setNews] = useState([]);\n  //  useEffect(()=>{\n  //    axios.get(`https://api.tvmaze.com/search/shows?q=batman`)\n  //   .then(res=>{console.log(res.data);setNews(res.data)})\n  // },[])\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"TV Shows\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, console.log(props), props.res.map(function (value, index) {\n    return __jsx(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(PostLink, {\n      id: value.show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, value.show.name));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"https://api.tvmaze.com/search/shows?q=batman\"));\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", {\n            res: res.data\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/react-tutorial/next-page1/pages/index.js"],"names":["React","useState","useEffect","Layout","axios","Link","PostLink","props","id","name","Index","console","log","res","map","value","index","show","getInitialProps","get","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,EAAE,eAAQA,KAAK,CAACC,EAAd,SAAmBD,KAAK,CAACE,IAAzB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,EAAV,CADF,CADF,CADoB;AAAA,CAAtB;;AAWA,IAAME,KAAK,GAAG,SAARA,KAAQ,CAACH,KAAD,EAAW;AACvB;AAGF;AAEA;AACA;AAEA;AAEE,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,OAAO,CAACC,GAAR,CAAYL,KAAZ,CADH,EAICA,KAAK,CAACM,GAAN,CAAUC,GAAV,CAAc,UAACC,KAAD,EAAOC,KAAP,EAAe;AAC5B,WAEE;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,EAAE,EAAED,KAAK,CAACE,IAAN,CAAWT,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIO,KAAK,CAACE,IAAN,CAAWR,IAAf,CAFF,CAFF;AASD,GAVA,CAJD,CAFF,CADF;AAqBD,CAhCD;;AAkCAC,KAAK,CAACQ,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJd,KAAK,CAACe,GAAN,gDADI;;AAAA;AAChBN,UAAAA,GADgB;AAAA,2CAGf;AAACA,YAAAA,GAAG,EAAGA,GAAG,CAACO;AAAX,WAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAQA,eAAeV,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport axios from \"axios\";\r\nimport Link from 'next/link'\r\n\r\n// import fetch from 'isomorphic-unfetch';\r\n\r\nconst PostLink = props => (\r\n  <li>\r\n    <Link href=\"/p/[id]/\" as={`/p/${props.id}${props.name}`}>\r\n      <a>{props.id}</a>\r\n      {/* <a>{props.name}</a> */}\r\n\r\n      \r\n    </Link>\r\n  </li>\r\n)\r\n\r\nconst Index = (props) => {\r\n  // const [news, setNews] = useState([]);\r\n\r\n\r\n//  useEffect(()=>{\r\n\r\n//    axios.get(`https://api.tvmaze.com/search/shows?q=batman`)\r\n//   .then(res=>{console.log(res.data);setNews(res.data)})\r\n\r\n// },[])\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>TV Shows</h1>\r\n      <div> \r\n        {console.log(props)}\r\n        \r\n      \r\n      {props.res.map((value,index)=>{\r\n        return(\r\n\r\n          <div key={index}>\r\n            <PostLink id={value.show.id}/>\r\n            <p>{value.show.name}</p>\r\n          {/* <p><img src={`${value.show.image.medium}`} alt=\"\"/></p> */}\r\n  \r\n          </div>\r\n        )\r\n      })}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async()=>{\r\n  const res = await axios.get(`https://api.tvmaze.com/search/shows?q=batman`)\r\n  //  .then(res=>{console.log(res.data);setNews(res.data)})\r\n  return {res : res.data}\r\n}\r\n\r\n\r\n\r\nexport default Index;\r\n\r\n"]},"metadata":{},"sourceType":"module"}